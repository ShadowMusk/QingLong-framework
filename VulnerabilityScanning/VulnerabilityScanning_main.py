import os
import sys
from prompt_toolkit import prompt
from prompt_toolkit.completion import WordCompleter
from prompt_toolkit.formatted_text import ANSI
from prompt_toolkit.history import InMemoryHistory

sys.path.append(os.path.dirname(os.path.realpath(__file__)))
from AuxiliaryFunctions import MyTable
import sqlmap
import wapiti
import nikto


class VulnerabilityAnalysisScanning:
    def __init__(self):
        commands = ["back", "show functions"]
        completer = WordCompleter(commands)
        formatted_text1 = ANSI('\033[1;32;32m(QingLong Framework/Vulnerability Scanning) > \033[0m')
        history = InMemoryHistory()
        while True:
            choice = prompt(formatted_text1, completer=completer, history=history)
            if choice == 'back':
                break
            elif choice == 'show functions':
                self.show_functions()
                continue
            elif choice == '1':
                sqlmap.mysqlmap()
                continue
            elif choice == '2':
                nikto.mynikto()
                continue
            elif choice == '3':
                wapiti.mywapiti()
                continue

    def show_functions(self):
        print("\n" + '\033[1;34;34m' + "Vulnerability Scanning" + '\033[0m' + "\n" + '=' * len("Vulnerability Scanning") + "\n")
        headers = ['\033[1;34;34m' + "id" + '\033[0m', '\033[1;34;34m' + "model" + '\033[0m', '\033[1;34;34m' + "usage" + '\033[0m', '\033[1;34;34m' + "description" + '\033[0m']
        mydata = [["1", "sqlmap", "1", "使用sqlmap检测SQL注入漏洞"], ["2", "nikto", "2", "使用nikto扫描网站漏洞"], ["3", "wapiti", "3", "使用wapiti扫描网站漏洞"]]
        MyTable.createTable(headers, mydata)
