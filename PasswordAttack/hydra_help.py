def help():
    print("""
    -R                             恢复先前中断/崩溃的会话  
    -I                             忽略现有的恢复文件(不等待10秒)
    -S                             执行SSL连接
    -s PORT                        如果服务在另一个默认端口上,在此定义端口
    -l LOGIN 或 -L FILE            使用登录名LOGIN登录,或从FILE中加载多个登录名
    -p PASS 或 -P FILE             尝试密码PASS,或从FILE中加载多个密码  
    -x MIN:MAX:CHARSET             生成密码暴力破解,输入"-x -h"获取帮助
    -y                             禁用在暴力破解中使用符号
    -r                             对-x使用非随机洗牌方法
    -e nsr                         尝试空密码、登录名作为密码、反向登录名
    -u                             循环用户而不是密码(与-x配合使用时有效)  
    -C FILE                        登录名:密码的冒号分隔格式,代替-L/-P选项
    -M FILE                        要攻击的服务器列表,每行一个
    -o FILE                        将找到的登录名/密码写入FILE而不是stdout
    -b FORMAT                      定义-o FILE的格式:文本、json、jsonv1
    -f / -F                        找到登录名/密码对时退出(-M下-f每主机,-F全局)
    -t TASKS                       每目标并行连接数(默认16)
    -T TASKS                       总体并行连接数(对-M,默认64)
    -w / -W TIME                   响应等待时间(32)/每线程之间等待时间(0)  
    -c TIME                        每登录尝试的总等待时间(强制-t 1) 
    -4 / -6                        使用IPv4(默认)/ IPv6地址(在-M中加[])
    -v / -V / -d                   详细模式/显示尝试的登录名+密码/调试模式
    -O                             使用旧的SSL v2和v3
    -K                             不重做失败尝试(对-M大规模扫描有用)
    -q                             不打印连接错误消息
    -U                             服务模块使用详细信息
    -m OPT                         特定模块的选项,见-U输出
    -h                             更多命令行选项(完整帮助)
    server                         目标:DNS,IP或IP段(此选项或-M选项)  
    service                        要破解的服务(见下文支持的协议)
    OPT                            一些服务模块的额外输入(-U查看模块帮助)
    """)
